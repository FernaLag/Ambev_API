<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UserSecretsId>3c58d567-b1d8-4a51-bd36-dbfddb84701b</UserSecretsId>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<DockerfileContext>..\..</DockerfileContext>
		<DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="11.11.0" />
		<PackageReference Include="MediatR" Version="12.4.1" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.3">
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		  <PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="Rebus.ServiceProvider" Version="10.5.0" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="8.0.0" />
		<PackageReference Include="Swashbuckle.AspNetCore.Filters" Version="9.0.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Ambev.Ominia.Application\Ambev.Ominia.Application.csproj" />
		<ProjectReference Include="..\Ambev.Ominia.Crosscutting\Ambev.Ominia.Crosscutting.csproj" />
		<ProjectReference Include="..\Ambev.Ominia.Persistence\Ambev.Ominia.Persistence.csproj" />
		<ProjectReference Include="..\Ambev.Ominia.Domain\Ambev.Ominia.Domain.csproj" />
		<ProjectReference Include="..\Ambev.Ominia.EventStore\Ambev.Ominia.EventStore.csproj" />
		<ProjectReference Include="..\Ambev.Ominia.Messaging\Ambev.Ominia.Messaging.csproj" />
	</ItemGroup>

</Project>
